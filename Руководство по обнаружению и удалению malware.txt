Руководство по обнаружению и удалению malware v 0.01
Авторское право и отказ от ответственности
Данный документ может свободно распространятся на условия GPL версии 2.0 и выше. 
 
Автор документа не несёт никакой ответственности за любые, прямые и косвенные убытки, недополученную прибыль, вред репутации и т.д. причиненные применением настоящего документа.
Цели написания настоящего документа и для кого он предназначен
Данное руководство предназначено для системных администраторов и описывает процесс проверки Linux и Windows машины на наличие malware и последующей его (malware) удаления в случае если будет обнаружено. 
 
Предполагается что системный администратор обладает опытом работы в командной строке Linux и Windows, понимает основные принципы работы и архитектуру указанных операционных систем и знаком с работой стека протоколов TCP/IP.
Безопасность и меры предорожности
В ходе проверки узла на наличие malware а также в ходе удаления вредоносных программ следует помнить о трёх опасностях:
 
Malware может разрушить или украсть ваши данные или остановить работу приложений запущенных на узле с которым Ва работаете и технологических или бизнес-процессов которые от них зависят; 
Ваши действия (пусть и формально правильные!) могут привести к тем же самым негативным результатам;
Malware может попытаться перехватить Ваши учетные данные или использовать Ваш сеанс в целях дальнейшего распространения.
 
Меры предосторожности:
 
Предупредите о начале работ заинтересованных лиц (коллеги, партнёры клиенты и пр.). Согласуйте время и дату проведения работ. Рассчитывайте на худший вариант развития событий;
Сделайте резервные копии важных данных;
Изолируйте исследуемый узел от внешних сетей или будьте готовы его изолировать в любой момент;
НЕ заходите при помощи telnet, rdp или с локальной консоли на исследуемый Windows узел с правами Domain Admin, Enterprise Admins, Replicator, Schema Admins;
НЕ используйте олицетворение (impersonation) в домене Microsoft Windows менее безопасное чем SecurityImpersonation — сервер может идентифицировать и олицетворять клиент в локальной системе (см. приложение 1);
НЕ пробрасывайте ssh аутентификацию (см. приложение 2);
Не заходите с исследуемого узла на любые иные узлы кроме как под специально созданной учётной записью или анонимно;
Заходите на исследуемый узел под локальными учетными записями;
Не вводите и не копируйте на исследуемый узел пароли от учетных записей других узлов, криптографические сертификаты или ключи ssh;
Отзовите или ограничьте применение ssh ключей и криптографических сертификатов учётных записей исследуемого узла.
 
Теория поиска и удаления malware
 
В общем случае под термином malware или вредоносным программным обеспечением понимают любые компьютерные программы предназначенные для нанесения вреда (законным) правам и интересам  (легитимных) пользователей и/или владельцев информационной системы или третьих лиц.
Соответственно задача поиска malware есть задача поиск программ выполняющих определенные действия называемые вредоносными, как то копирование конфиденциальной информации на хосты принадлежащие иным лицам, запись символов введенных с клавиатуры, модификацию программ приводящей к их неработоспособности, предоставления доступа к информационной системы в обход штатных методов аутентификации и авторизации и пр.
 
Из сказанного возможно сделать два возможных вывода:
 
Не существует универсальных методов обнаружения malware;
Перед началом поиска следует хотя бы в самых общих чертах представить какие вредоносные действия должна осуществлять предполагаемая malware. 
 
Основные методы поиска malware:
 
Поиск по сигнатурам. Предполагается что у нас есть база данных сигнатур malware. Недостатком этого метода является возможность поиска только ранее известных видов malware;
 
Анализ поведения запущенных программ. Поиск среди запущенных программ тех кто осуществляет вредоносные действия;
 
Проверка целостности программного обеспечения и конфигурации информационной системы при помощи контрольных сумм и/или электронной подписи. Недостатком этого метода является необходимость создания базы данных контрольных сумм или наложения электронной подписи а также необходимость хранения контрольных сумм и ключей подписи в недоступном для malware месте;
 
Поиск аномального потребления ресурсов или поведения информационной системы. В ряде случаев malware может потреблять аномальное количество различных ограниченных ресурсов - CPU, RAM, HDD, сетевой трафик, энергопотребление и пр. Также malware может вызывать ошибки и сбои в работе информационной системы;
 
Анализ сетевого трафика. Поиск взаимодействий не являющихся легитимными и/или скрытых методами стеганографии;
Поиск и анализ наложенных (см приложение 3) каналов связи;
 
Анализ попыток неудачных попыток аутентификации и авторизации;
 
Анализ состояния структур данных ядра операционной системы (далее ОС) и иного программного обеспечения (вектора прерываний, hooks,  таблицы экспорта библиотек, потоки команд и пр).
 
Rootkit’s
 
Руткит (англ. rootkit, то есть «набор root'а») — набор программных средств (например, исполняемых файлов, скриптов, конфигурационных файлов), обеспечивающих сокрытие /маскировку объектов - процессов, файлов, директорий, драйверов и пр.
 
Поиск rootkit в силу их природы представляет собой сложную задачу не имеющую универсального рецепта. В общем случае поиск производится “снизу - вверх”. От низкоуровневого программного обеспечения до высокоуровнего. От тесно связанного с аппаратурой firmware - BIOS, EFI, ILO и пр к загрузчику, ядру операционной системы, наборам системных библиотек, сервисам, средам исполнения и так далее. Практически обычно поиск начинают от уровня загрузчика т.к. Более низкоуровневое программное обеспечение слишком тесно связано с аппаратным обеспечением и создание универсального rootkit для него сложно (но Не невозможно!)
Классификация руткитов:
По уровню привилегий:
-    Уровень пользователя (user-mode)
-    Уровень ядра (kernel-mode)
По принципу действия
-    изменяющие алгоритмы выполнения системных функций (Modify execution path)
-    изменяющие системные структуры данных (Direct kernel object manipulation)
 
 
Общий порядок исследования
 
Подготовка к исследованию
Исследование On-line
Исследование Off-line
Удаление malware
Использованные источники
 
https://ru.wikipedia.org/wiki/%D0%92%D1%80%D0%B5%D0%B4%D0%BE%D0%BD%D0%BE%D1%81%D0%BD%D0%B0%D1%8F_%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B0
https://ru.wikipedia.org/wiki/%D0%A0%D1%83%D1%82%D0%BA%D0%B8%D1%82
https://habrahabr.ru/post/122445/
https://ru.wikipedia.org/wiki/%D0%A1%D0%BA%D1%80%D1%8B%D1%82%D1%8B%D0%B9_%D0%BA%D0%B0%D0%BD%D0%B0%D0%BB
 
 
 
Приложение 1.
 
SecurityAnonymous — самый ограниченный уровень; сервер не может олицетворять или идентифицировать клиент;
SecurityIdentification — сервер может получать SID и привилегии клиента, но не получает право на олицетворение клиента;
SecurityImpersonation — сервер может идентифицировать и олицетворять клиент в локальной системе;
SecurityDelegation — наименее ограниченный уровень. Позволяет серверу олицетворять клиент в локальных и удаленных системах. Windows NT 4 и более ранние версии лишь частично поддерживают этот уровень олицетворения.
 
 
Приложеие 2.
 
https://habrahabr.ru/post/122445/
Допустим, мы хотим подключиться к серверу 10.1.1.2, который готов принять наш ключ. Но копировать его на 8.8.8.8 мы не хотим, ибо там проходной двор и половина людей имеет sudo и может шариться по чужим каталогам. Компромиссным вариантом было бы иметь «другой» ssh-ключ, который бы авторизовал user@8.8.8.8 на 10.1.1.2, но если мы не хотим пускать кого попало с 8.8.8.8 на 10.1.1.2, то это не вариант (тем паче, что ключ могут не только поюзать, но и скопировать себе «на чёрный день»).
 
ssh предлагает возможность форварда ssh-агента (это такой сервис, который запрашивает пароль к ключу). Опция ssh -A пробрасывает авторизацию на удалённый сервер.
 
Вызов выглядит так:
 
ssh -A user@8.8.8.8 ssh user2@10.1.1.2
 
Удалённый ssh-клиент (на 8.8.8.8) может доказать 10.1.1.2, что мы это мы только если мы к этому серверу подключены и дали ssh-клиенту доступ к своему агенту авторизации (но не ключу!). 
 
Приложеие 3.
 
https://ru.wikipedia.org/wiki/%D0%A1%D0%BA%D1%80%D1%8B%D1%82%D1%8B%D0%B9_%D0%BA%D0%B0%D0%BD%D0%B0%D0%BB
 
Скрытый канал — это коммуникационный канал, пересылающий информацию методом, который изначально был для этого не предназначен.
 
 
